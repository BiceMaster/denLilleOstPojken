cbuffer PostProcessBuffer
{
	//Index 0: Black and White Fraction
	//Index 1: Sepia Fraction
	//Index 2 and 3: Buff
	float4 PPEffects;
};

Texture2D SpriteTexture;
SamplerState SampleType
{
	Filter = MIN_MAG_MIP_POINT;
    AddressU = Wrap;
    AddressV = Wrap;
};

struct VOut
{
    float4 position : SV_POSITION;
	float2 texCoord : TEXCOORD;
};

float4 PShader(VOut pIn) : SV_TARGET
{
    float4 c = SpriteTexture.Sample(SampleType, pIn.texCoord);
	if (c.a < 0.05f)
	{
		clip(-1);
		//c = float4(0, 0, 0, 0);
	}
	
	float value = (c.r + c.g + c.b) / 3; 
	float4 bw = float4(0, 0, 0, 1);
    bw.r = value;
    bw.g = value;
    bw.b = value;
	
	return PPEffects.x * bw + (1 - PPEffects.x) * c;
}